---
title: In-class exercise 6
date: "`r Sys.Date()`"
format: html
execute: 
  message: false
  warning: false
editor: visual
---

# Imports

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse, knitr)
```

## Importing data

### Geospatial

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

### Aspatial

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

## Combining data frames using Left join

```{r}
#Note : To retain geometric column, then left file should be SF and right should be tibbler
hunan_GDPPC <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15)
```

## Plotting choropleth map

```{r}
tmap_mode('plot')
tm_shape(hunan_GDPPC)+
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC")+
  tm_layout(main.title = "Distribution of GDP per capita by district",
            main.title.position = "center",
            main.title.size = 1.0,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type = "8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)
```

## Identify Area neighbours

### Contiguity neighbours method (Queen)

```{r}

cn_queen <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         .before = 1)#Before 1 puts this as the new first column
```

```{r}
st_contiguity(hunan_GDPPC, queen = TRUE)
```

### Contiguity neighbours method (Rook)

```{r}
cn_rook <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         queen = FALSE,
         .before = 1)#Before 1 puts this as the new first column
```

## Computing contiguity weights

### Contiguity weights (Queen)

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb),
         .before = 1)
```

### Contiguity weights (Rook)

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb),
         queen = FALSE,
         .before = 1)
```
