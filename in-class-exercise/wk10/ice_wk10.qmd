---
title: In-class exercise week 10
date: "`r Sys.Date()`"
format: html
theme: superhero
execute: 
  message: false
  warning: false
editor: visual
---

# Imports

## Import packages

```{r}
pacman::p_load(sf, sfdep, GWmodel, SpatialML, tidyverse, tmap, ggpubr, olsrr, devtools, rsample)
```

## Data

```{r}
mdata <- read_rds("data/aspatial/mdata.rds")
```

```{r}
set.seed(1234) #To do data sampling

resale_split <- initial_split(mdata, prop = 6.5/10,)
train_data <- training(resale_split)
test_data <- testing(resale_split)
```

```{r}
write_rds(train_data, "data/model/train_data.rds")
write_rds(test_data, "data/model/test_data.rds")
```

```{r}
train_data <- read_rds("data/model/train_data.rds")
test_data <- read_rds("data/model/test_data.rds")
```

## Building non-spatial multiple linear regression

```{r}
price_mlr <- lm(resale_price ~ floor_area_sqm + storey_order +remaining_lease_mths + PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +WITHIN_1KM_PRISCH,
                data=train_data)
summary(price_mlr)
```

```{r}
write_rds(price_mlr, "data/model/price_mlr.rds")
```

## GWR methods

### GWR predictive model

```{r}
train_data_sp <- as_Spatial(train_data)
train_data_sp
```

## Preparing coordinate data

### Extracting coordinate data

```{r}
coords <- st_coordinates(mdata)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

```{r}
write_rds(coords_train, "data/model/coords_train.rds")
write_rds(coords_test, "data/model/coords_test.rds")
```

```{r}
coords_train <- read_rds("data/model/coords_train.rds")
coords_test <- read_rds("data/model/coords_test.rds")
```

### Dropping geometry fields

```{r}
train_data <- train_data %>%
  st_drop_geometry()
```

## Callibrating random forest

```{r}
set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm + storey_order +remaining_lease_mths + PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +WITHIN_1KM_PRISCH,
                data=train_data)
summary(rf)
```

```{r}
print(rf)
```

minimum node size is 5 can be increased

Higher R square value in comparison shows random forest performs better.

## Geographically weighted random forest

```{r}
#set.seed(1234)
#gwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +remaining_lease_mths + PROX_CBD +PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +WITHIN_1KM_PRISCH,
               # dframe=train_data,
                #bw =55,
                #kernel = "adaptive",
                #coords = coords_train)
#summary(gwRF_adaptive)
```

```{r}
#write_rds(gwRF_adaptive,"data/model/gwRF.rds")
```

```{r}
#vi_df <- as.data.frame(gwRF_adaptive$Global.Model$variable.importance)
```

```{r}
#gwRF_adaptive <- read_rds("data/model/gwRF.rds")
```

```{r}
test_data <- cbind(test_data, coords_test) %>%
  st_drop_geometry()
```

```{r}
#TAKES A LOT OF TIME TO RUN
#gwRD_pred <- predict.grf(gwRF_adaptive,
#                         test_data,
#                         x.var.name = "X",
#                         y.var.name = "Y",
#                         local.w = 1,
 #                        global.w = 0)
```
