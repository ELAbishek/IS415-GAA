---
title: In-class exercise 7
date: "`r Sys.Date()`"
format: html
execute: 
  message: false
  warning: false
editor: visual
---

# Imports

## Import packages

```{r}
pacman::p_load(sf, sfdep, tmap, tidyverse, plotly, zoo, Kendall)
```

## Import data

### Spatial data

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

### Aspatial data

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
GDPPC <- read_csv("data/aspatial/Hunan_GDPPC.csv")

GDPPC_st = spacetime(GDPPC, hunan, .loc_col = "County", .time_col = "Year")
```

## Performing relation join

```{r}
hunan_GDPPC <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15)
```

## Plotting Chloropleth map

```{r}
tmap_mode('plot')
tm_shape(hunan_GDPPC)+
  tm_fill("GDPPC",
          style = "quantile",
          palette = "Blues",
          title = "GDPPC")+
  tm_layout(main.title = "Distribution of GDP per capita by district",
            main.title.position = "center",
            main.title.size = 1.0,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type = "8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha = 0.2)
```

## Global measures of spatial association

### Derive row standardised weights metric 

```{r}
wm_q <- hunan_GDPPC %>%
  mutate(nb = st_contiguity(geometry),
         wt = st_weights(nb),
         .before = 1)
```

## Global measures of spatial association

### Computing global moransI

```{r}
moranI <- global_moran(wm_q$GDPPC,
                       wm_q$nb,
                       wm_q$wt)
```

### Performing Global Morans I test

```{r}
global_moran_test(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt)
```

### Performing Global Moran I permutation test

```{r}
set.seed(1234)
global_moran_perm(wm_q$GDPPC,
                  wm_q$nb,
                  wm_q$wt,
                  nsim = 99)
```

# Computing local Morans I 

```{r}
lisa <- wm_q %>%
  mutate(local_moran = local_moran(
    GDPPC, nb, wt, nsim = 99),
    .before = 1) %>%
  unnest(local_moran)
lisa #auto gives lowlow high high high low, no need to manually label it
  
```

### Visualizing local Moran I

```{r}
tmap_mode("plot")

tm_shape(lisa) +
  tm_fill("ii") +
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8))
```

```{r}
#p_ii_sim for ones with many simulations
tm_shape(lisa) +
  tm_fill("p_ii_sim") +
  tm_borders(alpha = 0.5) +
  tm_view(set.zoom.limits = c(6,8))
```

```{r}
lisa_sig <- lisa %>%
  filter(p_ii_sim < 0.05)

tm_shape(lisa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
tm_shape(lisa_sig) +
  tm_fill("mean") +
  tm_borders(alpha = 0.4) 
```

# Computing Gi\*

```{r}
HCSA <- wm_q %>%
  mutate(local_Gi = local_gstar_perm(
    GDPPC, nb, wt, nsim = 99),
    .before = 1) %>%
  unnest(local_Gi)
HCSA
```

## Visualizing Gi\*

```{r}
tm_shape(HCSA)+
  tm_fill("gi_star")+
  tm_borders(alpha = 0.5)+
  tm_view(set.zoom.limits = c(6,8))
```

## Visualizing p value of HCSA

```{r}
tm_shape(HCSA)+
  tm_fill("p_sim")+
  tm_borders(alpha = 0.5)
```

## Creating time cube series

```{r}
GDPPC_nb <- GDPPC_st %>%
  activate("geometry") %>%
  mutate(
    nb = include_self(st_contiguity(geometry)),
    wt = st_weights(nb)
  )%>%
  set_nbs("nb") %>%
  set_wts("wt")
```

## Computing Gi\*

```{r}
gi_stars <- GDPPC_nb %>%
  group_by(Year) %>%
  mutate(gi_star = local_gstar_perm(GDPPC, nb, wt, nsim=99),
         .before = 1) %>%
  unnest(gi_star)
```

# Mann-Kendall test

```{r}
cbg <- gi_stars %>%
  ungroup() %>%
  filter(County == "Changsha") %>%
  select(County, Year, gi_star)
```

## Arrange to show significant weights

```{r}
ehsa <- emerging_hotspot_analysis(
  GDPPC_st,
  .var = "GDPPC",
  k = 1,
  nsim = 99
)
```

## Distance-based weights

## Deriving adaptive weights
